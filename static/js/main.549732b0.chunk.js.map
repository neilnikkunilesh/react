{"version":3,"sources":["context.js","components/contacts/Contact.js","components/contacts/Contacts.js","components/layout/TextInputGroup.js","components/contacts/AddContact.js","components/contacts/EditContact.js","components/layout/Header.js","components/pages/About.js","components/pages/NotFound.js","components/Test/Test.js","App.js","reportWebVitals.js","index.js"],"names":["Context","React","createContext","reducer","state","action","type","contacts","filter","contact","id","payload","map","Provider","dispatch","setState","a","axios","get","res","this","data","value","props","children","Component","Consumer","Contact","showContactInfo","onDeleteClick","delete","name","email","phone","className","onClick","style","cursor","float","color","bind","to","marginRight","Contacts","Fragment","TextInputGroup","label","placeholder","onChange","error","htmlFor","classnames","defaultProps","AddContact","errors","onSubmit","e","preventDefault","newContact","post","history","push","target","background","EditContact","updContact","match","params","put","Header","branding","href","About","NotFound","Test","title","body","fetch","then","response","json","App","exact","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.549732b0.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst Context = React.createContext();\r\n\r\nconst reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case 'DELETE_CONTACT':\r\n      return {\r\n        ...state,\r\n        contacts: state.contacts.filter(\r\n          (contact) => contact.id !== action.payload\r\n        ),\r\n      };\r\n    case 'ADD_CONTACT':\r\n      return {\r\n        ...state,\r\n        contacts: [action.payload, ...state.contacts],\r\n      };\r\n    case 'UPDATE_CONTACT':\r\n      return {\r\n        ...state,\r\n        contacts: state.contacts.map((contact) =>\r\n          contact.id === action.payload.id\r\n            ? (contact = action.payload)\r\n            : contact\r\n        ),\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport class Provider extends Component {\r\n  state = {\r\n    contacts: [],\r\n    dispatch: (action) => this.setState((state) => reducer(state, action)),\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const res = await axios.get('https://jsonplaceholder.typicode.com/users');\r\n    this.setState({ contacts: res.data });\r\n  }\r\n  render() {\r\n    return (\r\n      <Context.Provider value={this.state}>\r\n        {this.props.children}\r\n      </Context.Provider>\r\n    );\r\n  }\r\n}\r\n\r\nexport const Consumer = Context.Consumer;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { Consumer } from '../../context';\r\nimport axios from 'axios';\r\n\r\nclass Contact extends Component {\r\n  state = {\r\n    showContactInfo: false,\r\n  };\r\n\r\n  onDeleteClick = async (id, dispatch) => {\r\n    try {\r\n      await axios.delete(`https://jsonplaceholder.typicode.com/users/${id}`);\r\n      dispatch({ type: 'DELETE_CONTACT', payload: id });\r\n    } catch (error) {\r\n      dispatch({ type: 'DELETE_CONTACT', payload: id });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { id, name, email, phone } = this.props.contact;\r\n    const { showContactInfo } = this.state;\r\n\r\n    return (\r\n      <Consumer>\r\n        {(value) => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div className=\"card card-body mb-3\">\r\n              <h4>\r\n                {name}{' '}\r\n                <i\r\n                  onClick={() =>\r\n                    this.setState({\r\n                      showContactInfo: !this.state.showContactInfo,\r\n                    })\r\n                  }\r\n                  className=\"fas fa-sort-down\"\r\n                  style={{ cursor: 'pointer' }}\r\n                ></i>\r\n                <i\r\n                  className=\"fas fa-times\"\r\n                  style={{ cursor: 'pointer', float: 'right', color: 'red' }}\r\n                  onClick={this.onDeleteClick.bind(this, id, dispatch)}\r\n                ></i>\r\n                <Link to={`/contact/edit/${id}`}>\r\n                  <i className=\"fas fa-pencil-alt\"\r\n                  style={{\r\n                    cursor: 'pointer',\r\n                    float: 'right',\r\n                    color: 'black',\r\n                    marginRight: '1rem'\r\n                  }}></i>\r\n                </Link>\r\n              </h4>\r\n              {showContactInfo ? (\r\n                <ul className=\"list-group\">\r\n                  <li className=\"list-group-item\">Email: {email}</li>\r\n                  <li className=\"list-group-item\">Phone: {phone}</li>\r\n                </ul>\r\n              ) : null}\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nContact.propTypes = {\r\n  contact: PropTypes.object.isRequired,\r\n  // deleteClickHandler: PropTypes.func.isRequired,\r\n};\r\nexport default Contact;\r\n","import React, { Component } from 'react';\r\nimport Contact from './Contact';\r\nimport { Consumer } from '../../context';\r\n\r\nclass Contacts extends Component {\r\n  render() {\r\n    return (\r\n      <Consumer>\r\n        {(value) => {\r\n          const { contacts } = value;\r\n          return (\r\n            <React.Fragment>\r\n              <h1 className=\"display-4 mb-2\">\r\n                <span className=\"text-danger\">\r\n                  Contact</span> List\r\n                </h1>\r\n              {contacts.map((contact) => (\r\n                <Contact\r\n                  key={contact.id}\r\n                  contact={contact}\r\n                  // deleteClickHandler={this.deleteContact.bind(this, contact.id)}\r\n                />\r\n              ))}\r\n            </React.Fragment>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Contacts;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classnames from 'classnames';\r\n\r\nconst TextInputGroup = ({\r\n  label,\r\n  name,\r\n  value,\r\n  placeholder,\r\n  type,\r\n  onChange,\r\n  error,\r\n}) => {\r\n  return (\r\n    <div className=\"form-group\">\r\n      <label htmlFor={name}>{label}</label>\r\n      <input\r\n        type={type}\r\n        name={name}\r\n        className={classnames('form-control form-control-lg', {\r\n          'is-invalid': error\r\n        })}\r\n        placeholder={placeholder}\r\n        value={value}\r\n        onChange={onChange}\r\n      />\r\n      {error && <div className=\"invalid-feedback\">{error}</div>}\r\n    </div>\r\n  );\r\n};\r\n\r\nTextInputGroup.propTypes = {\r\n  label: PropTypes.string.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  placeholder: PropTypes.string.isRequired,\r\n  value: PropTypes.string.isRequired,\r\n  type: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n  error: PropTypes.string,\r\n};\r\n\r\nTextInputGroup.defaultProps = {\r\n  type: 'text',\r\n};\r\n\r\nexport default TextInputGroup;\r\n","import React, { Component } from 'react';\r\nimport { Consumer } from '../../context';\r\n// import { v4 as uuid } from 'uuid';\r\nimport TextInputGroup from '../layout/TextInputGroup';\r\nimport axios from 'axios';\r\n// 29\r\nclass AddContact extends Component {\r\n  state = {\r\n    name: '',\r\n    email: '',\r\n    phone: '',\r\n    errors: {},\r\n  };\r\n\r\n  onSubmit = async (dispatch, e) => {\r\n    e.preventDefault();\r\n\r\n    const { name, email, phone } = this.state;\r\n\r\n    // Check For Errors\r\n    if (name === '') {\r\n      this.setState({ errors: { name: 'Name is required' } });\r\n      return;\r\n    }\r\n\r\n    if (email === '') {\r\n      this.setState({ errors: { email: 'Email is required' } });\r\n      return;\r\n    }\r\n    if (phone === '') {\r\n      this.setState({ errors: { phone: 'Phone is required' } });\r\n      return;\r\n    }\r\n    const newContact = {\r\n      // id: uuid(),\r\n      name,\r\n      email,\r\n      phone,\r\n    };\r\n\r\n    const res = await axios.post(\r\n      'https://jsonplaceholder.typicode.com/users',\r\n      newContact\r\n    );\r\n    dispatch({ type: 'ADD_CONTACT', payload: res.data });\r\n\r\n    // clean form\r\n    this.setState({\r\n      name: '',\r\n      email: '',\r\n      phone: '',\r\n      errors: {},\r\n    });\r\n\r\n    this.props.history.push('/');\r\n  };\r\n\r\n  onChange = (e) => this.setState({ [e.target.name]: e.target.value });\r\n\r\n  render() {\r\n    const { name, email, phone, errors } = this.state;\r\n\r\n    return (\r\n      <Consumer>\r\n        {(value) => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div className=\"card mb-3\">\r\n              <div\r\n                className=\"card-header\"\r\n                style={{ background: 'black', color: '#ffffff' }}\r\n              >\r\n                Add Contact\r\n              </div>\r\n              <div className=\"card-body\">\r\n                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\r\n                  <TextInputGroup\r\n                    label=\"Name\"\r\n                    name=\"name\"\r\n                    placeholder=\"Enter Name\"\r\n                    value={name}\r\n                    onChange={this.onChange}\r\n                    error={errors.name}\r\n                  />\r\n\r\n                  <TextInputGroup\r\n                    label=\"Email\"\r\n                    name=\"email\"\r\n                    type=\"email\"\r\n                    placeholder=\"Enter Email\"\r\n                    value={email}\r\n                    onChange={this.onChange}\r\n                    error={errors.email}\r\n                  />\r\n\r\n                  <TextInputGroup\r\n                    label=\"Phone\"\r\n                    name=\"phone\"\r\n                    placeholder=\"Enter Phone\"\r\n                    value={phone}\r\n                    onChange={this.onChange}\r\n                    error={errors.phone}\r\n                  />\r\n\r\n                  <input\r\n                    type=\"submit\"\r\n                    value=\"Add Contact\"\r\n                    className=\"btn btn-light btn-lg btn-block\"\r\n                  />\r\n                </form>\r\n              </div>\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AddContact;\r\n","import React, { Component } from 'react';\r\nimport { Consumer } from '../../context';\r\n// import { v4 as uuid } from 'uuid';\r\nimport TextInputGroup from '../layout/TextInputGroup';\r\nimport axios from 'axios';\r\n// 29\r\nclass EditContact extends Component {\r\n  state = {\r\n    name: '',\r\n    email: '',\r\n    phone: '',\r\n    errors: {},\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const { id } = this.props.match.params;\r\n    const res = await axios.get(\r\n      `https://jsonplaceholder.typicode.com/users/${id}`\r\n    );\r\n\r\n    const contact = res.data;\r\n    this.setState({\r\n      name: contact.name,\r\n      email: contact.email,\r\n      phone: contact.phone,\r\n    });\r\n  }\r\n  onSubmit = async (dispatch, e) => {\r\n    e.preventDefault();\r\n\r\n    const { name, email, phone } = this.state;\r\n\r\n    // Check For Errors\r\n    if (name === '') {\r\n      this.setState({ errors: { name: 'Name is required' } });\r\n      return;\r\n    }\r\n\r\n    if (email === '') {\r\n      this.setState({ errors: { email: 'Email is required' } });\r\n      return;\r\n    }\r\n    if (phone === '') {\r\n      this.setState({ errors: { phone: 'Phone is required' } });\r\n      return;\r\n    }\r\n\r\n    const updContact = {\r\n      name,\r\n      email,\r\n      phone,\r\n    };\r\n    const { id } = this.props.match.params;\r\n    const res = await axios.put(\r\n      `https://jsonplaceholder.typicode.com/users/${id}`,\r\n      updContact\r\n    );\r\n\r\n    dispatch({type: 'UPDATE_CONTACT', payload: res.data})\r\n    // clean form\r\n    this.setState({\r\n      name: '',\r\n      email: '',\r\n      phone: '',\r\n      errors: {},\r\n    });\r\n\r\n    this.props.history.push('/');\r\n  };\r\n\r\n  onChange = (e) => this.setState({ [e.target.name]: e.target.value });\r\n\r\n  render() {\r\n    const { name, email, phone, errors } = this.state;\r\n\r\n    return (\r\n      <Consumer>\r\n        {(value) => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div className=\"card mb-3\">\r\n              <div\r\n                className=\"card-header\"\r\n                style={{ background: 'black', color: '#ffffff' }}\r\n              >\r\n                Edit Contact\r\n              </div>\r\n              <div className=\"card-body\">\r\n                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\r\n                  <TextInputGroup\r\n                    label=\"Name\"\r\n                    name=\"name\"\r\n                    placeholder=\"Enter Name\"\r\n                    value={name}\r\n                    onChange={this.onChange}\r\n                    error={errors.name}\r\n                  />\r\n\r\n                  <TextInputGroup\r\n                    label=\"Email\"\r\n                    name=\"email\"\r\n                    type=\"email\"\r\n                    placeholder=\"Enter Email\"\r\n                    value={email}\r\n                    onChange={this.onChange}\r\n                    error={errors.email}\r\n                  />\r\n\r\n                  <TextInputGroup\r\n                    label=\"Phone\"\r\n                    name=\"phone\"\r\n                    placeholder=\"Enter Phone\"\r\n                    value={phone}\r\n                    onChange={this.onChange}\r\n                    error={errors.phone}\r\n                  />\r\n\r\n                  <input\r\n                    type=\"submit\"\r\n                    value=\"Update Contact\"\r\n                    className=\"btn btn-light btn-lg btn-block\"\r\n                  />\r\n                </form>\r\n              </div>\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EditContact;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst Header = (props) => {\r\n  const { branding } = props;\r\n  return (\r\n    <nav className=\"navbar navbar-expand-sm navbar-dark bg-danger mb-3 py-0\">\r\n      <div className=\"container\">\r\n      <a href=\"/\" className=\"navbar-brand\">\r\n        {branding}\r\n      </a>\r\n        <ul className=\"navbar-nav mr-auto\">\r\n          <li className=\"nav-item\">\r\n            <Link to=\"/\" className=\"nav-link\">\r\n              <i className=\"fas fa-home\"></i>  Home\r\n            </Link>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <Link to=\"/contact/add\" className=\"nav-link\">\r\n              <i className=\"fa fa-plus\"></i> Add\r\n            </Link>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <Link to=\"/about\" className=\"nav-link\">\r\n              <i className=\"fa fa-question\"></i> About\r\n            </Link>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\n// We want to display something even if nothing\r\nHeader.defaultProps = {\r\n  branding: 'My App',\r\n};\r\n\r\nHeader.propTypes = {\r\n  branding: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Header;\r\n","import React from 'react'\r\n\r\nexport default function About() {\r\n    return (\r\n        <div>\r\n            <h1 className=\"display-4\">About Contact Manager</h1>\r\n            <p className=\"lead\">Simple app to manage contacts</p>\r\n            <p className=\"text-secondary\">Version 1.0.0</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\n\r\nexport default function NotFound() {\r\n  return (\r\n    <div className=\"container text-center\">\r\n      <h1 className=\"display-1\">\r\n        <span className=\"text-danger\">404</span>\r\n      </h1>\r\n      <h2 className=\"display-4\">Page Not Found</h2>\r\n      <p className=\"lead\">Sorry, that page does not exist.</p>\r\n    </div>\r\n  );\r\n}\r\n","import React, { Component } from 'react';\r\n\r\nclass Test extends Component {\r\n  state = {\r\n    title: 'Test state',\r\n    body: '',\r\n  };\r\n  /*\r\n        componentDidMount() is invoked immediately after a component\r\n        is mounted (inserted into tree).\r\n        If you need to load data from a remote endpoint,\r\n        this is a good place to instantiate the network request.\r\n    */\r\n  componentDidMount() {\r\n    fetch('https://jsonplaceholder.typicode.com/posts/1')\r\n      .then((response) => response.json())\r\n      .then((data) => this.setState({\r\n          title: data.title,\r\n          body: data.body\r\n      })\r\n        \r\n      );\r\n  }\r\n\r\n  render() {\r\n      const { title, body} = this.state;\r\n    return (\r\n      <div>\r\n        <h1>{title}</h1>\r\n        <p>{body}</p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Test;\r\n","import React, { Component } from 'react';\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\nimport Contacts from './components/contacts/Contacts';\nimport AddContact from './components/contacts/AddContact';\nimport EditContact from './components/contacts/EditContact';\nimport Header from './components/layout/Header';\nimport About from './components/pages/About';\nimport NotFound from './components/pages/NotFound';\nimport Test from './components/Test/Test';\n\nimport { Provider } from './context';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider>\n        <Router>\n          <div className=\"App\">\n            <Header branding=\"Contact Manager\" />\n            <div className=\"container\">\n              <Switch>\n                <Route exact path=\"/\" component={Contacts} />\n                <Route exact path=\"/contact/add\" component={AddContact} />\n                <Route exact path=\"/contact/edit/:id\" component={EditContact} />\n                <Route exact path=\"/about\" component={About} />\n                <Route exact path=\"/test\" component={Test} />\n                <Route component={NotFound} />\n              </Switch>\n            </div>\n          </div>\n        </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}